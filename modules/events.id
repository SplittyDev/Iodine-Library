# File        : events.id
# Name        : events
# Author      : GruntTheDivine
# Description : Provides several classes for event handling and dispatch


# Class       : EventEmitter
# Description : Provides a node.js like EventEmitter class
class EventEmitter {
    func EventEmitter (self) {
        self.dict = {};
    }

    func on (self, event, callback) {
        self.dict [event] = callback;
    }

    func once (self, event, callback) {
        self.dict [event] = lambda (*args) {
            callback (*args);
            self.dict.remove (event);
        };
    }

    func remove (self, callback) {
        self.dict.remove (callback);
    }

    func emit (self, event, *args) {
        if (self.dict.contains (event)) {
            self.dict [event] (*args);
        }
    }
}


# Class       : Event
# Description : Provides a class for a single event
class Event {
    func Event (self) {
        self._handlers = [];
    }

    func __invoke__ (self, *args) {
        foreach (handler in self._handlers) {
            handler (*args);
        }   
    }

    func __add__ (self, callback) {
        self._handlers.add (callback);
        return self;
    }

    func __sub__ (self, callback) {
        self._handlers.remove (callback);
    }
}
